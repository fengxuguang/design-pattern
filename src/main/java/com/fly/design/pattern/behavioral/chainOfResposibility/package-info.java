/**
 * 责任链模式: 提供了一种通过一系列处理对象来处理请求的方法.
 * 每个处理对象都包含一个对下一个处理对象的引用, 形成一个链式结构. 当一个请求到达时, 它首先被传递给链中的第一个处理对象,
 * 如果改对象不能处理该请求, 它会将请求传递给下一个处理对象, 依此类推, 直到找到能够处理请求的对象为止.
 *
 * 责任链包含以下几个点:
 *   1. 定义一个抽象处理者 (Handler) 类, 该类包含一个对下一个处理者的引用, 并声明一个处理请求的方法
 *   2. 具体的处理者类继承自抽象处理类, 实现处理请求的方法. 在该方法中, 处理者可以决定是否处理请求, 如果不能处理, 则将请求传递给下一个处理者
 *   3. 客户端创建一个处理链, 将处理者按照一定的顺序连接起来
 *
 * 优点:
 *   1. 降低耦合度: 发送者不需要直到哪个对象会处理请求, 只需将请求发送到链的起始点.
 *   2. 灵活性: 可以根据需要动态地改变处理链中处理者的顺序, 以及每个处理者的职责
 *   3. 可扩展性: 可以很容易地添加新的处理者, 而不会影响现有代码
 *   4. 可维护性: 每个处理者关注单一的责任, 使得代码更易于理解和维护
 *
 * 缺点:
 *   1. 可能导致轻轻无法被处理
 *   2. 处理链太长导致性能问题
 *
 *
 * Created by fengxuguang on 2024/12/24 16:46
 */
package com.fly.design.pattern.behavioral.chainOfResposibility;