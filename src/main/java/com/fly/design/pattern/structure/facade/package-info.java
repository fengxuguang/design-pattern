/**
 * 外观模式: 通过引入一个外观类, 将复杂的子系统接口进行封装, 为客户端提供一个简单的高层接口.
 * 外观类充当了客户端与子系统之间的中间人, 处理客户端的请求并将其转发给适当的子系统. 外观模式并不在系统中添加新功能,
 * 它只是提供了一个更简洁的接口, 以简化客户端的操作.
 *
 * 优点:
 *   1. 简化接口: 客户端只需要与外观类交互, 无需了解底层子系统的复杂性
 *   2. 降低耦合: 外观模式将客户端与子系统解耦, 使得系统的变化不会影响客户端的代码
 *   3. 提高可维护性: 由于外观模式将子系统封装起来, 修改子系统的实现不会影响客户端代码, 从而提供了系统的可维护性
 *   4. 支持松散耦合: 外观模式可以帮助系统重的不同模块之间实现松散耦合, 从而支持模块的独立开发和测试.
 *
 * Created by fengxuguang on 2024/12/24 14:31
 */
package com.fly.design.pattern.structure.facade;